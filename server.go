package main

import (
    "fmt"
    "log"
    "net/http"
    "os"
)

// Fonction pour dÃ©marrer le serveur web
func startWebServer(port string) {
    fs := http.FileServer(http.Dir("public")) // Dossier contenant HTML, CSS, JS
    http.Handle("/", fs) // Servir les fichiers statiques

    fmt.Printf("Serveur web dÃ©marrÃ© sur http://localhost:%s ðŸš€\n", port)
    
    // DÃ©marrer le serveur en Ã©coutant sur le port spÃ©cifiÃ©
    err := http.ListenAndServe(":"+port, nil)
    if err != nil {
        log.Fatalf("Erreur de dÃ©marrage du serveur web : %v", err) // Meilleure gestion des erreurs
    }
}

// Fonction pour dÃ©marrer un processus worker
func startWorker() {
    fmt.Println("DÃ©marrage du processus worker...") // Log pour dÃ©marrer le worker
    // Ajouter ici la logique spÃ©cifique aux workers (par exemple traitement en arriÃ¨re-plan)
    // Exemple : traitement de jobs, tÃ¢ches programmÃ©es, etc.
    fmt.Println("Le worker est en fonctionnement...")
}

func main() {
    // DÃ©terminer le port en fonction de l'environnement (Heroku ou local)
    port := os.Getenv("PORT")
    if port == "" {
        port = "8080" // Port par dÃ©faut pour le dÃ©veloppement local
    }

    // VÃ©rifier les arguments pour savoir si on doit dÃ©marrer un processus web ou worker
    if len(os.Args) > 1 && os.Args[1] == "worker" {
        // DÃ©marrer le processus worker
        startWorker()
    } else {
        // DÃ©marrer le serveur web
        startWebServer(port)
    }
}
